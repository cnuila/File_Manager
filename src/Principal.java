
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Carlos Nuila
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        setLocationRelativeTo(null);
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
        jTabbedPane1.setEnabledAt(3, false);
        jTabbedPane1.setEnabledAt(4, false);
        setFont(new java.awt.Font("Segoe UI Symbol", 0, 12));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_crearCampo = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jt_nombreCampo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        js_longitud = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        rb_si = new javax.swing.JRadioButton();
        rb_no = new javax.swing.JRadioButton();
        rb_int = new javax.swing.JRadioButton();
        rb_double = new javax.swing.JRadioButton();
        rb_char = new javax.swing.JRadioButton();
        rb_string = new javax.swing.JRadioButton();
        rb_bool = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jb_crearCampo = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        buttonGroup_llave = new javax.swing.ButtonGroup();
        buttonGroup_tipo = new javax.swing.ButtonGroup();
        jd_borrarCampo = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jl_camposDlt = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jb_deleteField = new javax.swing.JButton();
        jd_listarCampo = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable_campos = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jd_modificarCampo = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jl_camposMod = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jt_nombreCampoMod = new javax.swing.JTextField();
        jb_modify = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        rb_intMod = new javax.swing.JRadioButton();
        rb_doubleMod = new javax.swing.JRadioButton();
        rb_charMod = new javax.swing.JRadioButton();
        rb_boolMod = new javax.swing.JRadioButton();
        rb_stringMod = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        js_longitudMod = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        buttonGroup_llaveMod = new javax.swing.ButtonGroup();
        buttonGroup_tipoMod = new javax.swing.ButtonGroup();
        jd_buscarRegistros = new javax.swing.JDialog();
        jPanel11 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jl_llaveP_BuscarRegistro = new javax.swing.JLabel();
        jt_llavePrimariaBuscarRegistros = new javax.swing.JTextField();
        jb_buscarLlaveBR = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable_buscarRegistro = new javax.swing.JTable();
        jd_crearRegistros = new javax.swing.JDialog();
        jPanel13 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jb_addNewRow = new javax.swing.JButton();
        jb_deleteLastRow = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jb_guardarRegistros = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_agregarRegistro = new javax.swing.JTable();
        jd_borrarRegistro = new javax.swing.JDialog();
        jPanel17 = new javax.swing.JPanel();
        jt_LlavePrimariaBorrarRegistro = new javax.swing.JTextField();
        jb_deleteRegistro = new javax.swing.JToggleButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable_borrarRegistro = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jb_buscarLLaveBoR = new javax.swing.JButton();
        jl_llaveP_BorrarRegistro = new javax.swing.JLabel();
        jd_modificarRegistro = new javax.swing.JDialog();
        jl_llaveP_ModificarRegistro = new javax.swing.JLabel();
        jt_llavePrimariaModificar = new javax.swing.JTextField();
        jb_buscarLlaveModificar = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable_modificarRegistro = new javax.swing.JTable();
        jb_modificarRegistro = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jd_cruzarArchivo = new javax.swing.JDialog();
        jPanel23 = new javax.swing.JPanel();
        jb_seleccionarArchivo = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jl_camposCruzar = new javax.swing.JList<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        jl_campoSeleccionado = new javax.swing.JList<>();
        jPanel25 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jb_cruzar = new javax.swing.JButton();
        jb_cruzarLista = new javax.swing.JButton();
        jd_listarRegistros = new javax.swing.JDialog();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable_listarRegistro = new javax.swing.JTable();
        jPanel20 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jd_tablaCruzar = new javax.swing.JDialog();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable_cruzar = new javax.swing.JTable();
        jd_reindexar = new javax.swing.JDialog();
        jPanel22 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jb_reindexar = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jl_camposRein = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jp_archivo = new javax.swing.JPanel();
        jb_nuevo = new javax.swing.JButton();
        jb_salvar = new javax.swing.JButton();
        jb_abrir = new javax.swing.JButton();
        jb_cerrar = new javax.swing.JButton();
        jb_salir = new javax.swing.JButton();
        jp_campo = new javax.swing.JPanel();
        jb_crearCampoJD = new javax.swing.JButton();
        jb_listarCampoJD = new javax.swing.JButton();
        jb_modificarCampoJD = new javax.swing.JButton();
        jb_borrarCampoJD = new javax.swing.JButton();
        jp_registro = new javax.swing.JPanel();
        jb_crearRegistro = new javax.swing.JButton();
        jb_ModificarRegistro = new javax.swing.JButton();
        jb_listarRegistros = new javax.swing.JButton();
        jb_cargarRegristrosPrueba = new javax.swing.JButton();
        jb_buscarRegistro = new javax.swing.JButton();
        jb_cruzarArchivos = new javax.swing.JButton();
        jb_borrarRegistro = new javax.swing.JButton();
        jp_indice = new javax.swing.JPanel();
        jb_crearIndice = new javax.swing.JButton();
        jb_reindJD = new javax.swing.JButton();
        jp_estand = new javax.swing.JPanel();
        jb_exportarExcel = new javax.swing.JButton();
        jb_exportarXML = new javax.swing.JButton();

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel4.setText("LLave Primaria:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nombre:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jt_nombreCampo.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jPanel3.add(jt_nombreCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 160, -1));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Tipo:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 50, -1));

        js_longitud.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        js_longitud.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
        js_longitud.setEnabled(false);
        jPanel3.add(js_longitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 60, 30));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Longitud:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        rb_si.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup_llave.add(rb_si);
        rb_si.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_si.setForeground(new java.awt.Color(255, 255, 255));
        rb_si.setText("Sí");
        jPanel3.add(rb_si, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, -1, -1));

        rb_no.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup_llave.add(rb_no);
        rb_no.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_no.setForeground(new java.awt.Color(255, 255, 255));
        rb_no.setText("No");
        jPanel3.add(rb_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, -1, -1));

        rb_int.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup_tipo.add(rb_int);
        rb_int.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_int.setForeground(new java.awt.Color(255, 255, 255));
        rb_int.setText("int");
        rb_int.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_intMouseClicked(evt);
            }
        });
        jPanel3.add(rb_int, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, -1));

        rb_double.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup_tipo.add(rb_double);
        rb_double.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_double.setForeground(new java.awt.Color(255, 255, 255));
        rb_double.setText("double");
        rb_double.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_doubleMouseClicked(evt);
            }
        });
        jPanel3.add(rb_double, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, -1, -1));

        rb_char.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup_tipo.add(rb_char);
        rb_char.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_char.setForeground(new java.awt.Color(255, 255, 255));
        rb_char.setText("char");
        rb_char.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_charMouseClicked(evt);
            }
        });
        jPanel3.add(rb_char, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, -1, -1));

        rb_string.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup_tipo.add(rb_string);
        rb_string.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_string.setForeground(new java.awt.Color(255, 255, 255));
        rb_string.setText("String");
        rb_string.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_stringMouseClicked(evt);
            }
        });
        jPanel3.add(rb_string, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, -1, -1));

        rb_bool.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup_tipo.add(rb_bool);
        rb_bool.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_bool.setForeground(new java.awt.Color(255, 255, 255));
        rb_bool.setText("boolean");
        rb_bool.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_boolMouseClicked(evt);
            }
        });
        jPanel3.add(rb_bool, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Symbol", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Crear Campo");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 130, 30));

        jb_crearCampo.setBackground(new java.awt.Color(0, 153, 51));
        jb_crearCampo.setForeground(new java.awt.Color(255, 255, 255));
        jb_crearCampo.setText("Crear");
        jb_crearCampo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_crearCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_crearCampoMouseClicked(evt);
            }
        });
        jPanel3.add(jb_crearCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, 150, 30));

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel7.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 180, 40));

        javax.swing.GroupLayout jd_crearCampoLayout = new javax.swing.GroupLayout(jd_crearCampo.getContentPane());
        jd_crearCampo.getContentPane().setLayout(jd_crearCampoLayout);
        jd_crearCampoLayout.setHorizontalGroup(
            jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_crearCampoLayout.setVerticalGroup(
            jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jl_camposDlt.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jl_camposDlt.setModel(new DefaultListModel());
        jScrollPane3.setViewportView(jl_camposDlt);

        jPanel5.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 200, 240));

        jLabel11.setFont(new java.awt.Font("Segoe UI Symbol", 0, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Borrar Campos");
        jPanel5.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 140, 30));

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));
        jPanel9.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel9.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 180, 40));

        jb_deleteField.setBackground(new java.awt.Color(153, 0, 51));
        jb_deleteField.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jb_deleteField.setText("Borrar");
        jb_deleteField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_deleteField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_deleteFieldMouseClicked(evt);
            }
        });
        jPanel5.add(jb_deleteField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, 100, 30));

        javax.swing.GroupLayout jd_borrarCampoLayout = new javax.swing.GroupLayout(jd_borrarCampo.getContentPane());
        jd_borrarCampo.getContentPane().setLayout(jd_borrarCampoLayout);
        jd_borrarCampoLayout.setHorizontalGroup(
            jd_borrarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_borrarCampoLayout.setVerticalGroup(
            jd_borrarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI Symbol", 0, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Listar Campos");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 130, 30));

        jtable_campos.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jtable_campos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tipo", "Longitud", "Llave Primaria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtable_campos.setGridColor(new java.awt.Color(51, 51, 51));
        jScrollPane1.setViewportView(jtable_campos);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 370, 240));

        jPanel8.setBackground(new java.awt.Color(0, 0, 0));
        jPanel8.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel8.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jPanel4.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 180, 40));

        javax.swing.GroupLayout jd_listarCampoLayout = new javax.swing.GroupLayout(jd_listarCampo.getContentPane());
        jd_listarCampo.getContentPane().setLayout(jd_listarCampoLayout);
        jd_listarCampoLayout.setHorizontalGroup(
            jd_listarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );
        jd_listarCampoLayout.setVerticalGroup(
            jd_listarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jl_camposMod.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jl_camposMod.setModel(new DefaultListModel());
        jl_camposMod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_camposModMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jl_camposMod);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 160, 250));

        jLabel9.setFont(new java.awt.Font("Segoe UI Symbol", 0, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Modificar Campos");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 170, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Nombre:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 60, 30));

        jt_nombreCampoMod.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jPanel1.add(jt_nombreCampoMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 160, -1));

        jb_modify.setBackground(new java.awt.Color(153, 153, 0));
        jb_modify.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jb_modify.setText("Modificar");
        jb_modify.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_modify.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_modifyMouseClicked(evt);
            }
        });
        jPanel1.add(jb_modify, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, 120, 30));

        jLabel12.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Tipo:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 50, -1));

        buttonGroup_tipoMod.add(rb_intMod);
        rb_intMod.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_intMod.setForeground(new java.awt.Color(255, 255, 255));
        rb_intMod.setText("int");
        rb_intMod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_intModMouseClicked(evt);
            }
        });
        jPanel1.add(rb_intMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, -1, -1));

        buttonGroup_tipoMod.add(rb_doubleMod);
        rb_doubleMod.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_doubleMod.setForeground(new java.awt.Color(255, 255, 255));
        rb_doubleMod.setText("double");
        rb_doubleMod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_doubleModMouseClicked(evt);
            }
        });
        jPanel1.add(rb_doubleMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, -1, -1));

        buttonGroup_tipoMod.add(rb_charMod);
        rb_charMod.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_charMod.setForeground(new java.awt.Color(255, 255, 255));
        rb_charMod.setText("char");
        rb_charMod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_charModMouseClicked(evt);
            }
        });
        jPanel1.add(rb_charMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 130, -1, -1));

        buttonGroup_tipoMod.add(rb_boolMod);
        rb_boolMod.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_boolMod.setForeground(new java.awt.Color(255, 255, 255));
        rb_boolMod.setText("boolean");
        rb_boolMod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_boolModMouseClicked(evt);
            }
        });
        jPanel1.add(rb_boolMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, -1, -1));

        buttonGroup_tipoMod.add(rb_stringMod);
        rb_stringMod.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        rb_stringMod.setForeground(new java.awt.Color(255, 255, 255));
        rb_stringMod.setText("String");
        rb_stringMod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_stringModMouseClicked(evt);
            }
        });
        jPanel1.add(rb_stringMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, -1, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Longitud:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, -1, -1));

        js_longitudMod.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        js_longitudMod.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        js_longitudMod.setEnabled(false);
        jPanel1.add(js_longitudMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 210, 60, 30));

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 180, 40));

        javax.swing.GroupLayout jd_modificarCampoLayout = new javax.swing.GroupLayout(jd_modificarCampo.getContentPane());
        jd_modificarCampo.getContentPane().setLayout(jd_modificarCampoLayout);
        jd_modificarCampoLayout.setHorizontalGroup(
            jd_modificarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_modificarCampoLayout.setVerticalGroup(
            jd_modificarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(0, 0, 0));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Buscar Registro");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel14)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jl_llaveP_BuscarRegistro.setBackground(new java.awt.Color(255, 255, 255));
        jl_llaveP_BuscarRegistro.setText("Llave Primaria");

        jb_buscarLlaveBR.setBackground(new java.awt.Color(0, 51, 153));
        jb_buscarLlaveBR.setText("Buscar ");
        jb_buscarLlaveBR.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_buscarLlaveBR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_buscarLlaveBRMouseClicked(evt);
            }
        });

        jTable_buscarRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(jTable_buscarRegistro);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jl_llaveP_BuscarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jt_llavePrimariaBuscarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(jb_buscarLlaveBR, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_llaveP_BuscarRegistro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jt_llavePrimariaBuscarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_buscarLlaveBR, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_buscarRegistrosLayout = new javax.swing.GroupLayout(jd_buscarRegistros.getContentPane());
        jd_buscarRegistros.getContentPane().setLayout(jd_buscarRegistrosLayout);
        jd_buscarRegistrosLayout.setHorizontalGroup(
            jd_buscarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_buscarRegistrosLayout.setVerticalGroup(
            jd_buscarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jd_crearRegistros.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel13.setBackground(new java.awt.Color(0, 0, 0));

        jPanel12.setBackground(new java.awt.Color(0, 0, 0));
        jPanel12.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel12.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI Symbol", 0, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Agregar Registro");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        jb_addNewRow.setFont(new java.awt.Font("Segoe UI Symbol", 0, 10)); // NOI18N
        jb_addNewRow.setContentAreaFilled(false);
        jb_addNewRow.setPreferredSize(new java.awt.Dimension(38, 28));
        jb_addNewRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_addNewRowMouseClicked(evt);
            }
        });

        jb_deleteLastRow.setFont(new java.awt.Font("Segoe UI Symbol", 0, 10)); // NOI18N
        jb_deleteLastRow.setContentAreaFilled(false);
        jb_deleteLastRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_deleteLastRowMouseClicked(evt);
            }
        });

        jPanel15.setBackground(new java.awt.Color(0, 0, 0));
        jPanel15.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel15.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Rows");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jb_guardarRegistros.setBackground(new java.awt.Color(0, 153, 51));
        jb_guardarRegistros.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jb_guardarRegistros.setText("Guardar");
        jb_guardarRegistros.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_guardarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_guardarRegistrosMouseClicked(evt);
            }
        });

        jTable_agregarRegistro.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jTable_agregarRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable_agregarRegistro);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jb_guardarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jb_deleteLastRow)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jb_addNewRow, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)))
                .addGap(24, 24, 24))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jb_deleteLastRow, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jb_addNewRow, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jb_guardarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jd_crearRegistros.getContentPane().add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 300));

        jPanel17.setBackground(new java.awt.Color(0, 0, 0));

        jb_deleteRegistro.setBackground(new java.awt.Color(153, 0, 51));
        jb_deleteRegistro.setText("Borrar ");
        jb_deleteRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_deleteRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_deleteRegistroMouseClicked(evt);
            }
        });

        jTable_borrarRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(jTable_borrarRegistro);

        jPanel16.setBackground(new java.awt.Color(0, 0, 0));
        jPanel16.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel16.setForeground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Borrar Registro");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel15))
        );

        jb_buscarLLaveBoR.setBackground(new java.awt.Color(0, 51, 153));
        jb_buscarLLaveBoR.setText("Buscar");
        jb_buscarLLaveBoR.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_buscarLLaveBoR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_buscarLLaveBoRMouseClicked(evt);
            }
        });

        jl_llaveP_BorrarRegistro.setForeground(new java.awt.Color(255, 255, 255));
        jl_llaveP_BorrarRegistro.setText("Llave Primaria");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jt_LlavePrimariaBorrarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_buscarLLaveBoR, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_deleteRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jl_llaveP_BorrarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 38, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jl_llaveP_BorrarRegistro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_buscarLLaveBoR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_deleteRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jt_LlavePrimariaBorrarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_borrarRegistroLayout = new javax.swing.GroupLayout(jd_borrarRegistro.getContentPane());
        jd_borrarRegistro.getContentPane().setLayout(jd_borrarRegistroLayout);
        jd_borrarRegistroLayout.setHorizontalGroup(
            jd_borrarRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_borrarRegistroLayout.setVerticalGroup(
            jd_borrarRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jd_modificarRegistro.setBackground(new java.awt.Color(0, 0, 0));
        jd_modificarRegistro.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jl_llaveP_ModificarRegistro.setForeground(new java.awt.Color(255, 255, 255));
        jl_llaveP_ModificarRegistro.setText("Llave");
        jd_modificarRegistro.getContentPane().add(jl_llaveP_ModificarRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 391, -1));
        jd_modificarRegistro.getContentPane().add(jt_llavePrimariaModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 286, -1));

        jb_buscarLlaveModificar.setBackground(new java.awt.Color(0, 0, 153));
        jb_buscarLlaveModificar.setText("Buscar");
        jb_buscarLlaveModificar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_buscarLlaveModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_buscarLlaveModificarMouseClicked(evt);
            }
        });
        jd_modificarRegistro.getContentPane().add(jb_buscarLlaveModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, 80, 36));

        jTable_modificarRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable_modificarRegistro);

        jd_modificarRegistro.getContentPane().add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 591, 140));

        jb_modificarRegistro.setBackground(new java.awt.Color(153, 153, 0));
        jb_modificarRegistro.setText("Modificar");
        jb_modificarRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_modificarRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_modificarRegistroMouseClicked(evt);
            }
        });
        jd_modificarRegistro.getContentPane().add(jb_modificarRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 80, 36));

        jPanel18.setBackground(new java.awt.Color(0, 0, 0));
        jPanel18.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel18.setForeground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Modifcar Registro");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jd_modificarRegistro.getContentPane().add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 160, -1));

        jPanel19.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        jd_modificarRegistro.getContentPane().add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 270));

        jPanel23.setBackground(new java.awt.Color(0, 0, 0));

        jb_seleccionarArchivo.setBackground(new java.awt.Color(0, 0, 153));
        jb_seleccionarArchivo.setText("Seleccionar Archivo");
        jb_seleccionarArchivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_seleccionarArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_seleccionarArchivoMouseClicked(evt);
            }
        });

        jl_camposCruzar.setModel(new DefaultListModel());
        jScrollPane10.setViewportView(jl_camposCruzar);

        jl_campoSeleccionado.setModel(new DefaultListModel());
        jScrollPane11.setViewportView(jl_campoSeleccionado);

        jPanel25.setBackground(new java.awt.Color(0, 0, 0));
        jPanel25.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel25.setForeground(new java.awt.Color(255, 255, 255));

        jLabel19.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Cruzar Registros");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jb_cruzar.setBackground(new java.awt.Color(0, 0, 153));
        jb_cruzar.setText("Cruzar");
        jb_cruzar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_cruzar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_cruzarMouseClicked(evt);
            }
        });

        jb_cruzarLista.setBackground(new java.awt.Color(0, 0, 153));
        jb_cruzarLista.setText("-->");
        jb_cruzarLista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_cruzarLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_cruzarListaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jb_seleccionarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jb_cruzarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_cruzar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jb_cruzarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_seleccionarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_cruzar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout jd_cruzarArchivoLayout = new javax.swing.GroupLayout(jd_cruzarArchivo.getContentPane());
        jd_cruzarArchivo.getContentPane().setLayout(jd_cruzarArchivoLayout);
        jd_cruzarArchivoLayout.setHorizontalGroup(
            jd_cruzarArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_cruzarArchivoLayout.setVerticalGroup(
            jd_cruzarArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_listarRegistros.setBackground(new java.awt.Color(0, 0, 0));

        jPanel21.setBackground(new java.awt.Color(0, 0, 0));
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_listarRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane8.setViewportView(jTable_listarRegistro);

        jPanel21.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 630, 274));

        jPanel20.setBackground(new java.awt.Color(0, 0, 0));
        jPanel20.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel20.setForeground(new java.awt.Color(255, 255, 255));

        jLabel17.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Listar Registro");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(22, 22, 22))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel21.add(jPanel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 160, -1));

        javax.swing.GroupLayout jd_listarRegistrosLayout = new javax.swing.GroupLayout(jd_listarRegistros.getContentPane());
        jd_listarRegistros.getContentPane().setLayout(jd_listarRegistrosLayout);
        jd_listarRegistrosLayout.setHorizontalGroup(
            jd_listarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_listarRegistrosLayout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jd_listarRegistrosLayout.setVerticalGroup(
            jd_listarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
        );

        jTable_cruzar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane12.setViewportView(jTable_cruzar);

        javax.swing.GroupLayout jd_tablaCruzarLayout = new javax.swing.GroupLayout(jd_tablaCruzar.getContentPane());
        jd_tablaCruzar.getContentPane().setLayout(jd_tablaCruzarLayout);
        jd_tablaCruzarLayout.setHorizontalGroup(
            jd_tablaCruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_tablaCruzarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                .addContainerGap())
        );
        jd_tablaCruzarLayout.setVerticalGroup(
            jd_tablaCruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_tablaCruzarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jd_reindexar.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel22.setBackground(new java.awt.Color(0, 0, 0));

        jPanel24.setBackground(new java.awt.Color(0, 0, 0));
        jPanel24.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel24.setForeground(new java.awt.Color(255, 255, 255));

        jLabel18.setFont(new java.awt.Font("Segoe UI Symbol", 0, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Campos");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jb_reindexar.setBackground(new java.awt.Color(0, 153, 153));
        jb_reindexar.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jb_reindexar.setText("Reindexar");
        jb_reindexar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_reindexar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_reindexarMouseClicked(evt);
            }
        });

        jl_camposRein.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jl_camposRein.setModel(new DefaultListModel());
        jScrollPane9.setViewportView(jl_camposRein);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_reindexar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jb_reindexar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        jd_reindexar.getContentPane().add(jPanel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 290));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(0, 0, 0));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N

        jp_archivo.setBackground(new java.awt.Color(0, 0, 0));
        jp_archivo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jb_nuevo.setBackground(new java.awt.Color(0, 153, 153));
        jb_nuevo.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jb_nuevo.setText("Nuevo");
        jb_nuevo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_nuevoMouseClicked(evt);
            }
        });
        jp_archivo.add(jb_nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 100, 62));

        jb_salvar.setBackground(new java.awt.Color(0, 153, 153));
        jb_salvar.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jb_salvar.setText("Salvar");
        jb_salvar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_salvar.setEnabled(false);
        jb_salvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_salvarMouseClicked(evt);
            }
        });
        jp_archivo.add(jb_salvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 100, 60));

        jb_abrir.setBackground(new java.awt.Color(0, 153, 153));
        jb_abrir.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jb_abrir.setText("Abrir");
        jb_abrir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_abrirMouseClicked(evt);
            }
        });
        jp_archivo.add(jb_abrir, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 100, 62));

        jb_cerrar.setBackground(new java.awt.Color(0, 153, 153));
        jb_cerrar.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jb_cerrar.setText("Cerrar");
        jb_cerrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_cerrar.setEnabled(false);
        jb_cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_cerrarMouseClicked(evt);
            }
        });
        jp_archivo.add(jb_cerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 100, 60));

        jb_salir.setBackground(new java.awt.Color(153, 0, 0));
        jb_salir.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jb_salir.setText("Salir del Programa");
        jb_salir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_salirMouseClicked(evt);
            }
        });
        jp_archivo.add(jb_salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, 130, 30));

        jTabbedPane1.addTab("Archivo", jp_archivo);

        jp_campo.setBackground(new java.awt.Color(0, 0, 0));
        jp_campo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jb_crearCampoJD.setBackground(new java.awt.Color(153, 153, 255));
        jb_crearCampoJD.setText("Crear");
        jb_crearCampoJD.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_crearCampoJD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_crearCampoJDMouseClicked(evt);
            }
        });
        jp_campo.add(jb_crearCampoJD, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 100, 60));

        jb_listarCampoJD.setBackground(new java.awt.Color(153, 153, 255));
        jb_listarCampoJD.setText("Listar");
        jb_listarCampoJD.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_listarCampoJD.setEnabled(false);
        jb_listarCampoJD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_listarCampoJDMouseClicked(evt);
            }
        });
        jp_campo.add(jb_listarCampoJD, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 100, 60));

        jb_modificarCampoJD.setBackground(new java.awt.Color(153, 153, 255));
        jb_modificarCampoJD.setText("Modificar");
        jb_modificarCampoJD.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_modificarCampoJD.setEnabled(false);
        jb_modificarCampoJD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_modificarCampoJDMouseClicked(evt);
            }
        });
        jp_campo.add(jb_modificarCampoJD, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 100, 60));

        jb_borrarCampoJD.setBackground(new java.awt.Color(153, 153, 255));
        jb_borrarCampoJD.setText("Borrar");
        jb_borrarCampoJD.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_borrarCampoJD.setEnabled(false);
        jb_borrarCampoJD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_borrarCampoJDMouseClicked(evt);
            }
        });
        jp_campo.add(jb_borrarCampoJD, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 100, 60));

        jTabbedPane1.addTab("Campos", jp_campo);

        jp_registro.setBackground(new java.awt.Color(0, 0, 0));
        jp_registro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jb_crearRegistro.setBackground(new java.awt.Color(102, 0, 153));
        jb_crearRegistro.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jb_crearRegistro.setText("Crear Registro");
        jb_crearRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_crearRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_crearRegistroMouseClicked(evt);
            }
        });
        jp_registro.add(jb_crearRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 120, 60));

        jb_ModificarRegistro.setBackground(new java.awt.Color(102, 0, 153));
        jb_ModificarRegistro.setText("Modificar Registro");
        jb_ModificarRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_ModificarRegistro.setEnabled(false);
        jb_ModificarRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_ModificarRegistroMouseClicked(evt);
            }
        });
        jp_registro.add(jb_ModificarRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 130, 60));

        jb_listarRegistros.setBackground(new java.awt.Color(102, 0, 153));
        jb_listarRegistros.setText("Listar Registros");
        jb_listarRegistros.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_listarRegistros.setEnabled(false);
        jb_listarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_listarRegistrosMouseClicked(evt);
            }
        });
        jp_registro.add(jb_listarRegistros, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 130, 60));

        jb_cargarRegristrosPrueba.setBackground(new java.awt.Color(102, 0, 153));
        jb_cargarRegristrosPrueba.setText("Cargar Registros");
        jb_cargarRegristrosPrueba.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_cargarRegristrosPrueba.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_cargarRegristrosPruebaMouseClicked(evt);
            }
        });
        jp_registro.add(jb_cargarRegristrosPrueba, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, 130, 60));

        jb_buscarRegistro.setBackground(new java.awt.Color(102, 0, 153));
        jb_buscarRegistro.setText("Buscar Registro");
        jb_buscarRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_buscarRegistro.setEnabled(false);
        jb_buscarRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_buscarRegistroMouseClicked(evt);
            }
        });
        jp_registro.add(jb_buscarRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 120, 60));

        jb_cruzarArchivos.setBackground(new java.awt.Color(102, 0, 153));
        jb_cruzarArchivos.setText("Cruzar Archivos");
        jb_cruzarArchivos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_cruzarArchivos.setEnabled(false);
        jb_cruzarArchivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_cruzarArchivosMouseClicked(evt);
            }
        });
        jp_registro.add(jb_cruzarArchivos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 120, 60));

        jb_borrarRegistro.setBackground(new java.awt.Color(102, 0, 153));
        jb_borrarRegistro.setText("Borrar Registro");
        jb_borrarRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_borrarRegistro.setEnabled(false);
        jb_borrarRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_borrarRegistroMouseClicked(evt);
            }
        });
        jp_registro.add(jb_borrarRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 130, 60));

        jTabbedPane1.addTab("Registros", jp_registro);

        jp_indice.setBackground(new java.awt.Color(0, 0, 0));
        jp_indice.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jb_crearIndice.setBackground(new java.awt.Color(153, 102, 0));
        jb_crearIndice.setText("Crear Índices");
        jb_crearIndice.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_crearIndice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_crearIndiceMouseClicked(evt);
            }
        });
        jp_indice.add(jb_crearIndice, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 120, 50));

        jb_reindJD.setBackground(new java.awt.Color(153, 102, 0));
        jb_reindJD.setText("Reindexar");
        jb_reindJD.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb_reindJD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_reindJDMouseClicked(evt);
            }
        });
        jp_indice.add(jb_reindJD, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 120, 50));

        jTabbedPane1.addTab("Índices", jp_indice);

        jp_estand.setBackground(new java.awt.Color(0, 0, 0));

        jb_exportarExcel.setBackground(new java.awt.Color(0, 153, 0));
        jb_exportarExcel.setText("Exportar a Excel");
        jb_exportarExcel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jb_exportarXML.setBackground(new java.awt.Color(255, 255, 51));
        jb_exportarXML.setText("Exportar a XML");
        jb_exportarXML.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jp_estandLayout = new javax.swing.GroupLayout(jp_estand);
        jp_estand.setLayout(jp_estandLayout);
        jp_estandLayout.setHorizontalGroup(
            jp_estandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_estandLayout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(jb_exportarExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jb_exportarXML, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );
        jp_estandLayout.setVerticalGroup(
            jp_estandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_estandLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(jp_estandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_exportarExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_exportarXML, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(155, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Estandarización", jp_estand);

        jPanel2.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 360));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_nuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_nuevoMouseClicked
        // TODO add your handling code here:
        if (jb_nuevo.isEnabled()) {
            JFileChooser jfc = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivo de Texto", "txt");
            jfc.addChoosableFileFilter(filtro);
            jfc.setAcceptAllFileFilterUsed(false);
            int seleccion = jfc.showSaveDialog(this);
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                try {
                    archivoActual = null;
                    path = jfc.getSelectedFile().getPath();
                    archivoActual = new RandomAccessFile(jfc.getSelectedFile().getPath() + ".txt", "rw");
                    metaData = new Metadata();
                    llaves = new ArrayList<>();
                    registros = new ArrayList<>();
                    JOptionPane.showMessageDialog(this, "El archivo se ha creado exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
                    jTabbedPane1.setEnabledAt(1, true);
                    jb_nuevo.setEnabled(false);
                    jb_abrir.setEnabled(false);
                    jb_cerrar.setEnabled(true);
                    jb_salvar.setEnabled(true);
                } catch (Exception e) {
                }
            }
        }
    }//GEN-LAST:event_jb_nuevoMouseClicked

    private void jb_cerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_cerrarMouseClicked
        // TODO add your handling code here:
        if (jb_cerrar.isEnabled()) {
            try {
                archivoActual.close();
                //archivoCruzar.close();
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            archivoActual = null;
            archivoCruzar = null;
            metaData = null;
            registros = null;
            llaves = null;
            path = "";
            llaveActual = null;
            jb_nuevo.setEnabled(true);
            jb_abrir.setEnabled(true);
            jb_cerrar.setEnabled(false);
            jb_salvar.setEnabled(false);
            jTabbedPane1.setEnabledAt(1, false);
            jTabbedPane1.setEnabledAt(2, false);
            jTabbedPane1.setEnabledAt(3, false);
            jTabbedPane1.setEnabledAt(4, false);
            jb_modificarCampoJD.setEnabled(false);
            jb_borrarCampoJD.setEnabled(false);
            jb_listarCampoJD.setEnabled(false);
            JOptionPane.showMessageDialog(this, "El archivo se ha cerrado exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jb_cerrarMouseClicked

    private void jb_salirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_salirMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jb_salirMouseClicked

    private void jb_crearCampoJDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_crearCampoJDMouseClicked
        // TODO add your handling code here:
        if (arbolB.getRaiz() == null && jb_crearCampoJD.isEnabled()) {
            if (metaData.getCampos().size() <= 14) {
                jt_nombreCampo.setText("");
                rb_int.setSelected(true);
                rb_bool.setSelected(false);
                rb_char.setSelected(false);
                rb_double.setSelected(false);
                rb_string.setSelected(false);
                js_longitud.setValue(2);
                if (buscarLlave()) {
                    rb_si.setSelected(false);
                    rb_si.setEnabled(false);
                    rb_no.setSelected(true);
                } else {
                    rb_si.setEnabled(true);
                    rb_si.setSelected(false);
                    rb_no.setSelected(true);
                }
                jd_crearCampo.pack();
                jd_crearCampo.setModal(true);
                jd_crearCampo.setLocationRelativeTo(this);
                jd_crearCampo.setVisible(true);
            } else {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(this, "Ha creado 15 campos, no se pueden crear más", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jb_crearCampoJDMouseClicked

    private void jb_modificarCampoJDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_modificarCampoJDMouseClicked
        // TODO add your handling code here:{
        if (jb_modificarCampoJD.isEnabled() && arbolB.getRaiz() == null) {
            jl_camposMod.setModel(new DefaultListModel());
            DefaultListModel modelo = (DefaultListModel) jl_camposMod.getModel();
            for (int i = 0; i < metaData.getCampos().size(); i++) {
                modelo.addElement(metaData.getCampos().get(i));
            }
            jl_camposMod.setModel(modelo);

            jt_nombreCampoMod.setText("");

            jd_modificarCampo.pack();
            jd_modificarCampo.setModal(true);
            jd_modificarCampo.setLocationRelativeTo(this);
            jd_modificarCampo.setVisible(true);
        }
    }//GEN-LAST:event_jb_modificarCampoJDMouseClicked

    private void jb_borrarCampoJDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_borrarCampoJDMouseClicked
        // TODO add your handling code here:
        if (jb_borrarCampoJD.isEnabled() && arbolB.getRaiz() == null) {
            jl_camposDlt.setModel(new DefaultListModel());
            DefaultListModel modelo = (DefaultListModel) jl_camposDlt.getModel();
            for (int i = 0; i < metaData.getCampos().size(); i++) {
                modelo.addElement(metaData.getCampos().get(i));
            }
            jl_camposDlt.setModel(modelo);

            jd_borrarCampo.pack();
            jd_borrarCampo.setModal(true);
            jd_borrarCampo.setLocationRelativeTo(this);
            jd_borrarCampo.setVisible(true);
        }
    }//GEN-LAST:event_jb_borrarCampoJDMouseClicked

    private void jb_listarCampoJDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_listarCampoJDMouseClicked
        // TODO add your handling code here:
        if (jb_listarCampoJD.isEnabled()) {
            jtable_campos.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
            jtable_campos.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "Nombre", "Tipo", "Longitud", "Llave Primaria"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
            jScrollPane1.setViewportView(jtable_campos);

            jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 370, 240));

            Campo campoActual;
            for (int i = 0; i < metaData.getCampos().size(); i++) {
                campoActual = (Campo) metaData.getCampos().get(i);
                Object[] newRow = {
                    campoActual.getNombre(),
                    campoActual.getTipo(),
                    campoActual.getLength(),
                    campoActual.isLlavePrimaria()
                };
                DefaultTableModel modelo = (DefaultTableModel) jtable_campos.getModel();
                modelo.addRow(newRow);
                jtable_campos.setModel(modelo);
            }
            DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
            tcr.setHorizontalAlignment(SwingConstants.CENTER);
            jtable_campos.getColumnModel().getColumn(0).setCellRenderer(tcr);
            jtable_campos.getColumnModel().getColumn(1).setCellRenderer(tcr);
            jtable_campos.getColumnModel().getColumn(2).setCellRenderer(tcr);

            jd_listarCampo.pack();
            jd_listarCampo.setModal(true);
            jd_listarCampo.setLocationRelativeTo(this);
            jd_listarCampo.setVisible(true);
        }
    }//GEN-LAST:event_jb_listarCampoJDMouseClicked

    private void jb_salvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_salvarMouseClicked
        // TODO add your handling code here:
        if (jb_salvar.isEnabled()) {
            try {
                if (metaData.getTamanoMeta() == archivoActual.length() && llaves.isEmpty()) {
                    metaData.escribirCampos(archivoActual);
                } else {
                    guardarRegistros();
                    jb_ModificarRegistro.setEnabled(true);
                    jb_borrarRegistro.setEnabled(true);
                    jb_buscarRegistro.setEnabled(true);
                    jb_listarRegistros.setEnabled(true);
                    jb_cruzarArchivos.setEnabled(true);
                }
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jb_salvarMouseClicked

    private void jb_abrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_abrirMouseClicked
        // TODO add your handling code here:
        if (jb_abrir.isEnabled()) {
            archivoActual = null;
            try {
                JFileChooser jfc = new JFileChooser("./");
                FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos de Texto", "txt");
                jfc.addChoosableFileFilter(filtro);
                jfc.setAcceptAllFileFilterUsed(false);
                int seleccion = jfc.showOpenDialog(this);
                if (seleccion == JFileChooser.APPROVE_OPTION) {
                    archivoActual = new RandomAccessFile(jfc.getSelectedFile(), "rw");
                    metaData = new Metadata();
                    llaves = new ArrayList<>();
                    registros = new ArrayList<>();
                    path = jfc.getSelectedFile().getPath();
                    path = path.substring(0, path.length() - 4);
                    AdministrarArbol adar = new AdministrarArbol(path + "Arbol.eagle");
                    if (adar.getArchivo().exists()) {
                        adar.setArbol(arbolB);
                        adar.cargarArchivo();
                        arbolB = adar.getArbol();
                        jb_ModificarRegistro.setEnabled(true);
                        jb_borrarRegistro.setEnabled(true);
                        jb_buscarRegistro.setEnabled(true);
                        jb_listarRegistros.setEnabled(true);
                        jb_cruzarArchivos.setEnabled(true);
                    }
                    jTabbedPane1.setEnabledAt(1, true);
                    jb_nuevo.setEnabled(false);
                    jb_abrir.setEnabled(false);
                    jb_cerrar.setEnabled(true);
                    jb_salvar.setEnabled(true);

                    metaData.cargarCampos(archivoActual);
                    if (!metaData.getCampos().isEmpty()) {
                        jb_listarCampoJD.setEnabled(true);
                        jb_modificarCampoJD.setEnabled(true);
                        jb_borrarCampoJD.setEnabled(true);
                        if (buscarLlave()) {
                            jTabbedPane1.setEnabledAt(2, true);
                            jTabbedPane1.setEnabledAt(3, true);
                            jTabbedPane1.setEnabledAt(4, true);
                        }
                    }
                    JOptionPane.showMessageDialog(this, "El archivo se ha abierto exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jb_abrirMouseClicked

    private void jl_camposModMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_camposModMouseClicked
        // TODO add your handling code here:
        if (jl_camposMod.getSelectedIndex() >= 0) {
            int index = jl_camposMod.getSelectedIndex();
            jt_nombreCampoMod.setText(metaData.getCampos().get(index).getNombre());
            if (metaData.getCampos().get(index).getTipo().equals("int")) {
                rb_intMod.setSelected(true);
            }
            if (metaData.getCampos().get(index).getTipo().equals("double")) {
                rb_doubleMod.setSelected(true);
            }
            if (metaData.getCampos().get(index).getTipo().equals("char")) {
                rb_charMod.setSelected(true);
            }
            if (metaData.getCampos().get(index).getTipo().equals("String")) {
                rb_stringMod.setSelected(true);
            }
            if (metaData.getCampos().get(index).getTipo().equals("boolean")) {
                rb_boolMod.setSelected(true);
            }
            js_longitudMod.setValue(metaData.getCampos().get(index).getLength());
        }
    }//GEN-LAST:event_jl_camposModMouseClicked

    private void jb_modifyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_modifyMouseClicked
        // TODO add your handling code here:
        if (jl_camposMod.getSelectedIndex() >= 0) {
            int index = jl_camposMod.getSelectedIndex();
            metaData.getCampos().get(index).setNombre(jt_nombreCampoMod.getText());
            metaData.getCampos().get(index).setLength((int) js_longitudMod.getValue());
            String tipoCampo = "";
            if (rb_intMod.isSelected()) {
                tipoCampo = "int";
            }
            if (rb_doubleMod.isSelected()) {
                tipoCampo = "double";
            }
            if (rb_charMod.isSelected()) {
                tipoCampo = "char";
            }
            if (rb_stringMod.isSelected()) {
                tipoCampo = "String";
            }
            if (rb_boolMod.isSelected()) {
                tipoCampo = "boolean";
            }
            metaData.getCampos().get(index).setTipo(tipoCampo);

            jl_camposMod.setModel(new DefaultListModel());
            DefaultListModel modelo = (DefaultListModel) jl_camposMod.getModel();
            for (int i = 0; i < metaData.getCampos().size(); i++) {
                modelo.addElement(metaData.getCampos().get(i));
            }
            jl_camposMod.setModel(modelo);

            jt_nombreCampoMod.setText("");
            rb_boolMod.setSelected(false);
            rb_charMod.setSelected(false);
            rb_doubleMod.setSelected(false);
            rb_intMod.setSelected(false);
            rb_stringMod.setSelected(false);
            js_longitudMod.setValue(0);

            JOptionPane.showMessageDialog(jd_modificarCampo, "Se ha modificado el campo exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Debe tener un campo seleccionado en la lista");
        }
    }//GEN-LAST:event_jb_modifyMouseClicked

    private void jb_deleteFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_deleteFieldMouseClicked
        // TODO add your handling code here:
        if (jl_camposDlt.getSelectedIndex() >= 0) {
            metaData.getCampos().remove(jl_camposDlt.getSelectedIndex());

            jl_camposDlt.setModel(new DefaultListModel());
            DefaultListModel modelo = (DefaultListModel) jl_camposDlt.getModel();
            for (int i = 0; i < metaData.getCampos().size(); i++) {
                modelo.addElement(metaData.getCampos().get(i));
            }
            jl_camposDlt.setModel(modelo);

            JOptionPane.showMessageDialog(jd_borrarCampo, "Se ha eliminado el campo exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
            if (metaData.getCampos().isEmpty()) {
                jb_modificarCampoJD.setEnabled(false);
                jb_listarCampoJD.setEnabled(false);
                jd_borrarCampo.dispose();
                jb_borrarCampoJD.setEnabled(false);
            }
        } else {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Debe tener un campo seleccionado en la lista");
        }
    }//GEN-LAST:event_jb_deleteFieldMouseClicked

    private void rb_intModMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_intModMouseClicked
        // TODO add your handling code here:
        if (rb_intMod.isSelected()) {
            js_longitudMod.setValue(2);
            js_longitudMod.setEnabled(false);
        }
    }//GEN-LAST:event_rb_intModMouseClicked

    private void rb_doubleModMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_doubleModMouseClicked
        // TODO add your handling code here:
        if (rb_doubleMod.isSelected()) {
            js_longitudMod.setValue(8);
            js_longitudMod.setEnabled(false);
        }
    }//GEN-LAST:event_rb_doubleModMouseClicked

    private void rb_charModMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_charModMouseClicked
        // TODO add your handling code here:
        if (rb_charMod.isSelected()) {
            js_longitudMod.setValue(1);
            js_longitudMod.setEnabled(false);
        }
    }//GEN-LAST:event_rb_charModMouseClicked

    private void rb_boolModMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_boolModMouseClicked
        // TODO add your handling code here:
        if (rb_boolMod.isSelected()) {
            js_longitudMod.setValue(1);
            js_longitudMod.setEnabled(false);
        }
    }//GEN-LAST:event_rb_boolModMouseClicked

    private void rb_stringModMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_stringModMouseClicked
        // TODO add your handling code here:
        if (rb_stringMod.isSelected()) {
            js_longitudMod.setValue(0);
            js_longitudMod.setEnabled(true);
        }
    }//GEN-LAST:event_rb_stringModMouseClicked

    private void jb_crearRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_crearRegistroMouseClicked
        jTable_agregarRegistro.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{}
        ));
        DefaultTableModel modelo = (DefaultTableModel) jTable_agregarRegistro.getModel();
        String cabezas[] = new String[metaData.getCampos().size()];
        for (int i = 0; i < cabezas.length; i++) {
            cabezas[i] = metaData.getCampos().get(i).getNombre();
        }
        for (Object a : cabezas) {
            modelo.addColumn(a);
        }
        String row[] = new String[metaData.getCampos().size()];
        modelo.addRow(row);
        jTable_agregarRegistro.setModel(modelo);
        jd_crearRegistros.pack();
        jd_crearRegistros.setLocationRelativeTo(jd_crearRegistros);
        jd_crearRegistros.setModal(true);
        jd_crearRegistros.setVisible(true);
    }//GEN-LAST:event_jb_crearRegistroMouseClicked

    private void jb_ModificarRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_ModificarRegistroMouseClicked
        if (jb_ModificarRegistro.isEnabled()) {
            jTable_modificarRegistro.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{}
            ));
            DefaultTableModel modelo = (DefaultTableModel) jTable_modificarRegistro.getModel();
            String cabezas[] = new String[metaData.getCampos().size()];
            for (int i = 0; i < cabezas.length; i++) {
                cabezas[i] = metaData.getCampos().get(i).getNombre();
            }
            for (Object a : cabezas) {
                modelo.addColumn(a);
            }
            jTable_modificarRegistro.setModel(modelo);

            String llavePrimaria = encontrarLlavePrimaria().getNombre() + ":";
            jl_llaveP_ModificarRegistro.setText(llavePrimaria);
            jt_llavePrimariaModificar.setText("");
            jd_modificarRegistro.pack();
            jd_modificarRegistro.setLocationRelativeTo(this);
            jd_modificarRegistro.setModal(true);
            jd_modificarRegistro.setVisible(true);
        }
    }//GEN-LAST:event_jb_ModificarRegistroMouseClicked

    private void jb_listarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_listarRegistrosMouseClicked
        if (jb_listarRegistros.isEnabled()) {
            if (arbolB.getRaiz() != null) {
                jTable_listarRegistro.setModel(new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{}
                ));
                DefaultTableModel modeloT = (DefaultTableModel) jTable_listarRegistro.getModel();
                String cabezas[] = new String[metaData.getCampos().size()];
                for (int i = 0; i < cabezas.length; i++) {
                    cabezas[i] = metaData.getCampos().get(i).getNombre();
                }
                for (Object a : cabezas) {
                    modeloT.addColumn(a);
                }
                jTable_listarRegistro.setModel(modeloT);
                ArrayList<Llave> llavesTemp = new ArrayList<>();
                traverse(arbolB.getRaiz(), llavesTemp);
                for (int i = 0; i < llavesTemp.size(); i++) {
                    if (llavesTemp.get(i) != null) {
                        try {
                            String row[] = new String[metaData.getCampos().size()];
                            byte[] temp = new byte[300];
                            int pos = 0;
                            for (long j = llavesTemp.get(i).getOffset(); j < (llavesTemp.get(i).getOffset() + llavesTemp.get(i).getTamano()); j++) {
                                archivoActual.seek(j);
                                temp[pos] = archivoActual.readByte();
                                pos++;
                            }
                            String tempString = new String(temp);
                            String[] registro = tempString.split("[|]");
                            for (int j = 0; j < row.length; j++) {
                                row[j] = registro[j];
                            }
                            DefaultTableModel modelo = (DefaultTableModel) jTable_listarRegistro.getModel();
                            modelo.addRow(row);
                            jTable_listarRegistro.setModel(modelo);
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
            jd_listarRegistros.pack();
            jd_listarRegistros.setLocationRelativeTo(this);
            jd_listarRegistros.setModal(true);
            jd_listarRegistros.setVisible(true);
        }
    }//GEN-LAST:event_jb_listarRegistrosMouseClicked

    private void jb_borrarRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_borrarRegistroMouseClicked
        // TODO add your handling code here:
        if (jb_borrarRegistro.isEnabled()) {
            String llavePrimaria = encontrarLlavePrimaria().getNombre() + ":";

            jTable_borrarRegistro.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{}
            ));
            DefaultTableModel modelo = (DefaultTableModel) jTable_borrarRegistro.getModel();
            String cabezas[] = new String[metaData.getCampos().size()];
            for (int i = 0; i < cabezas.length; i++) {
                cabezas[i] = metaData.getCampos().get(i).getNombre();
            }
            for (Object a : cabezas) {
                modelo.addColumn(a);
            }
            jTable_borrarRegistro.setModel(modelo);

            jl_llaveP_BorrarRegistro.setText(llavePrimaria);
            jt_LlavePrimariaBorrarRegistro.setText("");
            jd_borrarRegistro.pack();
            jd_borrarRegistro.setLocationRelativeTo(this);
            jd_borrarRegistro.setModal(true);
            jd_borrarRegistro.setVisible(true);
        }
    }//GEN-LAST:event_jb_borrarRegistroMouseClicked

    private void jb_buscarRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_buscarRegistroMouseClicked
        // TODO add your handling code here:
        if (jb_buscarRegistro.isEnabled()) {
            jTable_buscarRegistro.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{}
            ));
            DefaultTableModel modelo = (DefaultTableModel) jTable_buscarRegistro.getModel();
            String cabezas[] = new String[metaData.getCampos().size()];
            for (int i = 0; i < cabezas.length; i++) {
                cabezas[i] = metaData.getCampos().get(i).getNombre();
            }
            for (Object a : cabezas) {
                modelo.addColumn(a);
            }
            jTable_buscarRegistro.setModel(modelo);

            String llavePrimaria = encontrarLlavePrimaria().getNombre() + ":";
            jl_llaveP_BuscarRegistro.setText(llavePrimaria);
            jt_llavePrimariaBuscarRegistros.setText("");
            jd_buscarRegistros.pack();
            jd_buscarRegistros.setLocationRelativeTo(this);
            jd_buscarRegistros.setModal(true);
            jd_buscarRegistros.setVisible(true);
        }
    }//GEN-LAST:event_jb_buscarRegistroMouseClicked

    private void jb_buscarLlaveBRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_buscarLlaveBRMouseClicked
        // TODO add your handling code here:
        if (jt_llavePrimariaBuscarRegistros.getText().equals("")) {
            JOptionPane.showMessageDialog(jd_buscarRegistros, "No puede estar vacío el campo", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Llave temp = new Llave();
            temp.setLlave(jt_llavePrimariaBuscarRegistros.getText());
            NodoArbol nodo = arbolB.search(temp);
            if (nodo == null) {
                JOptionPane.showMessageDialog(jd_buscarRegistros, "No se encontró la llave", "Información", JOptionPane.INFORMATION_MESSAGE);
                jt_llavePrimariaBuscarRegistros.setText("");
            } else {
                temp = buscarKey(jt_llavePrimariaBuscarRegistros.getText(), nodo);
                try {
                    llenarTabla(jTable_buscarRegistro, temp);
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jb_buscarLlaveBRMouseClicked

    private void jb_deleteLastRowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_deleteLastRowMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable_agregarRegistro.getModel();
        int rows = modelo.getRowCount();
        if (rows > 0) {
            modelo.removeRow(modelo.getRowCount() - 1);
        } else {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(jd_crearRegistros, "La tabla ya esta vacia", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
        jTable_agregarRegistro.setModel(modelo);
    }//GEN-LAST:event_jb_deleteLastRowMouseClicked

    private void jb_addNewRowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_addNewRowMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable_agregarRegistro.getModel();
        String row[] = new String[metaData.getCampos().size()];
        modelo.addRow(row);
        jTable_agregarRegistro.setModel(modelo);
    }//GEN-LAST:event_jb_addNewRowMouseClicked

    private void jb_guardarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_guardarRegistrosMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable_agregarRegistro.getModel();
        int rows = modelo.getRowCount(), columns = modelo.getColumnCount();
        Object data[][] = new String[rows][columns];
        boolean flag = true;
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < columns; j++) {
                if (modelo.getValueAt(i, j) == null) {
                    JOptionPane.showMessageDialog(jd_crearRegistros, "No pueden haber campos vacíos", "Información", JOptionPane.INFORMATION_MESSAGE);
                    flag = false;
                    j = columns;
                    i = rows;
                } else {
                    data[i][j] = modelo.getValueAt(i, j);
                }
            }
        }
        if (flag) {
            for (int i = 0; i < rows; i++) {
                String registro = "";
                String llavePrimaria = (String) data[i][0];
                Llave llave = new Llave();
                llave.setLlave(llavePrimaria);
                for (int j = 0; j < columns; j++) {
                    registro += data[i][j];
                    registro += "|";
                }
                llave.setTamano(registro.length());
                registros.add(registro);
                llaves.add(llave);
            }
            if (arbolB.getRaiz() != null) {
                for (int i = 0; i < registros.size(); i++) {
                    String[] llave = registros.get(i).split("[|]");
                    String llavePrimaria = llave[0];
                    Llave llaveTemp = new Llave();
                    llaveTemp.setLlave(llavePrimaria);
                    if (arbolB.search(llaveTemp) != null) {
                        registros.remove(i);
                        llaves.remove(i);
                        JOptionPane.showMessageDialog(jd_crearRegistros, "No pueden haber llaves repetidas: " + llavePrimaria, "Información", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
            if (!registros.isEmpty()) {
                JOptionPane.showMessageDialog(jd_crearRegistros, "Se han guardado los registros", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
            jTable_agregarRegistro.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{}
            ));
            DefaultTableModel modeloT = (DefaultTableModel) jTable_agregarRegistro.getModel();
            String cabezas[] = new String[metaData.getCampos().size()];
            for (int i = 0; i < cabezas.length; i++) {
                cabezas[i] = metaData.getCampos().get(i).getNombre();
            }
            for (Object a : cabezas) {
                modeloT.addColumn(a);
            }
            String row[] = new String[metaData.getCampos().size()];
            modeloT.addRow(row);
            jTable_agregarRegistro.setModel(modeloT);
            jb_borrarCampoJD.setEnabled(false);
            jb_crearCampoJD.setEnabled(false);
            jb_modificarCampoJD.setEnabled(false);
        }
    }//GEN-LAST:event_jb_guardarRegistrosMouseClicked

    private void jb_buscarLLaveBoRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_buscarLLaveBoRMouseClicked
        // TODO add your handling code here:
        if (jt_LlavePrimariaBorrarRegistro.getText().equals("")) {
            JOptionPane.showMessageDialog(jd_borrarRegistro, "No puede estar vacío el campo", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Llave temp = new Llave();
            temp.setLlave(jt_LlavePrimariaBorrarRegistro.getText());
            NodoArbol nodo = arbolB.search(temp);
            if (nodo == null) {
                JOptionPane.showMessageDialog(jd_borrarRegistro, "No se encontró la llave", "Información", JOptionPane.INFORMATION_MESSAGE);
            } else {
                temp = buscarKey(jt_LlavePrimariaBorrarRegistro.getText(), nodo);
                llaveActual = temp;
                try {
                    llenarTabla(jTable_borrarRegistro, temp);
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jb_buscarLLaveBoRMouseClicked

    private void jb_deleteRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_deleteRegistroMouseClicked
        // TODO add your handling code here:
        if (metaData.getAvailList().vacia()) {
            try {
                arbolB.remove(llaveActual);
                archivoActual.seek(metaData.getPosAvailList());
                String offsetPos = llaveActual.getOffset() + "$" + llaveActual.getTamano();
                archivoActual.write(offsetPos.getBytes());
                metaData.getAvailList().inserta(llaveActual, metaData.getAvailList().size + 1);
                archivoActual.seek(llaveActual.getOffset());
                String keyBorrado = "*-1$" + llaveActual.getTamano() + "*";
                archivoActual.write(keyBorrado.getBytes());
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            arbolB.remove(llaveActual);
            metaData.getAvailList().inserta(llaveActual, metaData.getAvailList().size + 1);
            Llave llaveFinal = metaData.getAvailList().elementoPosicion(metaData.getAvailList().size);
            Llave llaveAnterior = metaData.getAvailList().elementoPosicion(metaData.getAvailList().size - 1);
            try {
                archivoActual.seek(llaveAnterior.getOffset());
                String keyBorrado = "*" + llaveFinal.getOffset() + "$" + llaveAnterior.getTamano() + "*";
                archivoActual.write(keyBorrado.getBytes());
                String keyBorrado2 = "*-1" + "$" + llaveFinal.getTamano() + "*";
                archivoActual.seek(llaveFinal.getOffset());
                archivoActual.write(keyBorrado2.getBytes());
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        JOptionPane.showMessageDialog(jd_borrarRegistro, "Ha borrado el registro", "Información", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jb_deleteRegistroMouseClicked

    private void jb_buscarLlaveModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_buscarLlaveModificarMouseClicked
        // TODO add your handling code here:
        if (jt_llavePrimariaModificar.getText().equals("")) {
            JOptionPane.showMessageDialog(jd_modificarRegistro, "No puede estar vacío el campo", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Llave temp = new Llave();
            temp.setLlave(jt_llavePrimariaModificar.getText());
            NodoArbol nodo = arbolB.search(temp);
            if (nodo == null) {
                JOptionPane.showMessageDialog(jd_modificarRegistro, "No se encontró la llave", "Información", JOptionPane.INFORMATION_MESSAGE);
            } else {
                temp = buscarKey(jt_llavePrimariaModificar.getText(), nodo);
                llaveActual = temp;
                try {
                    llenarTabla(jTable_modificarRegistro, temp);
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jb_buscarLlaveModificarMouseClicked

    private void jb_modificarRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_modificarRegistroMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) jTable_modificarRegistro.getModel();
        int rows = modelo.getRowCount(), columns = modelo.getColumnCount();
        Object data[][] = new String[rows][columns];
        boolean flag = true;
        for (int j = 0; j < columns; j++) {
            if (modelo.getValueAt(0, j) == null) {
                JOptionPane.showMessageDialog(jd_modificarRegistro, "No pueden haber campos vacíos", "Información", JOptionPane.INFORMATION_MESSAGE);
                flag = false;
                j = columns;
            } else {
                data[0][j] = modelo.getValueAt(0, j);
            }
        }
        Llave prueba = new Llave();
        prueba.setLlave((String) data[0][0]);
        if (arbolB.search(prueba) == null) {
            flag = false;
            JOptionPane.showMessageDialog(jd_modificarRegistro, "No pueden modificar la llave primaria", "Información", JOptionPane.INFORMATION_MESSAGE);
            try {
                llenarTabla(jTable_modificarRegistro, llaveActual);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (flag) {
            String registro = "";
            for (int j = 0; j < columns; j++) {
                registro += data[0][j];
                registro += "|";
            }
            if (llaveActual.getTamano() >= registro.length()) {
                try {
                    archivoActual.seek(llaveActual.getOffset());
                    archivoActual.write(registro.getBytes());
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                if (!metaData.getAvailList().vacia()) {
                    int i;
                    Llave temp = new Llave();
                    boolean flag2 = false;
                    for (i = 1; i < metaData.getAvailList().size; i++) {
                        if (metaData.getAvailList().elementoPosicion(i).getTamano() >= registro.length()) {
                            flag2 = true;
                            break;
                        }
                    }
                    if (flag2) {
                        temp = metaData.getAvailList().elementoPosicion(i);
                        posArchivo = metaData.getAvailList().elementoPosicion(i).getOffset();
                        if (i == 1 && i != metaData.getAvailList().size) {
                            try {
                                archivoActual.seek(metaData.getPosAvailList());
                                Llave tempSiguiente = metaData.getAvailList().elementoPosicion(i + 1);
                                String nuevoPosAvail = tempSiguiente.getOffset() + "$" + tempSiguiente.getTamano();
                                archivoActual.write(nuevoPosAvail.getBytes());
                            } catch (IOException ex) {
                                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                        if (i == 1 && i == metaData.getAvailList().size) {
                            try {
                                archivoActual.seek(metaData.getPosAvailList());
                                String espacios = "      ";
                                archivoActual.write(espacios.getBytes());
                            } catch (IOException ex) {
                                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        } else {
                            if (i == metaData.getAvailList().size) {
                                try {
                                    Llave tempAnterior = metaData.getAvailList().elementoPosicion(i - 1);
                                    archivoActual.seek(tempAnterior.getOffset());
                                    String nuevoPosAvail = "*-1$" + tempAnterior.getTamano() + "*";
                                    archivoActual.write(nuevoPosAvail.getBytes());
                                } catch (IOException ex) {
                                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                        }
                        if (i > 1 && i < metaData.getAvailList().size) {
                            try {
                                Llave tempAnterior = metaData.getAvailList().elementoPosicion(i - 1);
                                Llave tempSiguiente = metaData.getAvailList().elementoPosicion(i + 1);
                                archivoActual.seek(tempAnterior.getOffset());
                                String nuevoPosAvail = "*" + tempSiguiente.getOffset() + "$" + tempAnterior.getTamano() + "*";
                                archivoActual.write(nuevoPosAvail.getBytes());
                            } catch (IOException ex) {
                                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                        try {
                            archivoActual.seek(posArchivo);
                            buscarKey(llaveActual.getLlave(), arbolB.search(llaveActual)).setOffset(metaData.getAvailList().elementoPosicion(i).getOffset());
                            buscarKey(llaveActual.getLlave(), arbolB.search(llaveActual)).setTamano(registro.length());
                            archivoActual.write(registro.getBytes());
                            metaData.getAvailList().borrarElemento(i);
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        Llave llaveTemp = new Llave();
                        try {
                            llaveTemp.setOffset(llaveActual.getOffset());
                            llaveTemp.setTamano(registro.length());
                            metaData.getAvailList().inserta(llaveTemp, metaData.getAvailList().size + 1);
                            Llave llaveAnterior = metaData.getAvailList().elementoPosicion(metaData.getAvailList().size - 1);
                            String nuevaPosAvail = "*" + llaveTemp.getOffset() + "$" + llaveAnterior.getTamano() + "*";
                            archivoActual.seek(llaveAnterior.getOffset());
                            archivoActual.write(nuevaPosAvail.getBytes());
                            String ultimaAvail = "*-1$" + llaveTemp.getTamano() + "*";
                            archivoActual.seek(llaveTemp.getOffset());
                            archivoActual.write(ultimaAvail.getBytes());
                            archivoActual.seek(archivoActual.length());
                            buscarKey(llaveActual.getLlave(), arbolB.search(llaveActual)).setOffset(archivoActual.length());
                            buscarKey(llaveActual.getLlave(), arbolB.search(llaveActual)).setTamano(registro.length());
                            archivoActual.write(registro.getBytes());
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                } else {
                    long posLlave = llaveActual.getOffset();
                    int tamaño = llaveActual.getTamano();
                    Llave temp = new Llave();
                    temp.setOffset(posLlave);
                    temp.setTamano(tamaño);
                    metaData.getAvailList().inserta(temp, metaData.getAvailList().size + 1);
                    String nuevaPosAvail = temp.getOffset() + "$" + temp.getTamano();
                    try {
                        archivoActual.seek(metaData.getPosAvailList());
                        archivoActual.write(nuevaPosAvail.getBytes());
                        archivoActual.seek(temp.getOffset());
                        String ultimoPosAvail = "*-1$" + temp.getTamano() + "*";
                        archivoActual.write(ultimoPosAvail.getBytes());
                        archivoActual.seek(archivoActual.length());
                        buscarKey(llaveActual.getLlave(), arbolB.search(llaveActual)).setOffset(archivoActual.length());
                        buscarKey(llaveActual.getLlave(), arbolB.search(llaveActual)).setTamano(registro.length());
                        archivoActual.write(registro.getBytes());
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            JOptionPane.showMessageDialog(jd_modificarRegistro, "Se ha modificado el registro exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jb_modificarRegistroMouseClicked

    private void jb_crearIndiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_crearIndiceMouseClicked
        // TODO add your handling code here:
        if (arbolB.getRaiz() != null) {
            AdministrarArbol adar = new AdministrarArbol(path + "Arbol.eagle");
            adar.setArbol(arbolB);
            adar.escribirArchivo();
            JOptionPane.showMessageDialog(this, "Se ha guardado el archivo del arbol donde esta ubicado el archivo de texto", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jb_crearIndiceMouseClicked

    private void jb_reindexarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_reindexarMouseClicked
        // TODO add your handling code here:
        /*if (jl_camposRein.getSelectedIndex() >= 0) {
            BTree nuevoArbol = new BTree(6);
            try {
                reindexar();
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            /*AdministrarArbol adar = new AdministrarArbol(path + "Arbol.eagle");
            adar.setArbol(nuevoArbol);
            adar.escribirArchivo();
            JOptionPane.showMessageDialog(jd_reindexar, "Se han reindexado los registros exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Debe tener un campo seleccionado en la lista");
        }*/
    }//GEN-LAST:event_jb_reindexarMouseClicked

    private void jb_seleccionarArchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_seleccionarArchivoMouseClicked
        // TODO add your handling code here:
        archivoCruzar = null;
        try {
            JFileChooser jfc = new JFileChooser("./");
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos de Texto", "txt");
            jfc.addChoosableFileFilter(filtro);
            jfc.setAcceptAllFileFilterUsed(false);
            int seleccion = jfc.showOpenDialog(this);
            String pathArchivoCruzar = "";
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                archivoCruzar = new RandomAccessFile(jfc.getSelectedFile(), "rw");
                pathArchivoCruzar = jfc.getSelectedFile().getPath();
                pathArchivoCruzar = pathArchivoCruzar.substring(0, pathArchivoCruzar.length() - 4);
                JOptionPane.showMessageDialog(jd_cruzarArchivo, "El archivo se ha abierto exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
            metaDataCruzar = new Metadata();
            metaDataCruzar.cargarCampos(archivoCruzar);
            jl_camposCruzar.setModel(new DefaultListModel());
            DefaultListModel modelo = (DefaultListModel) jl_camposCruzar.getModel();
            for (int i = 0; i < metaDataCruzar.getCampos().size(); i++) {
                modelo.addElement(metaDataCruzar.getCampos().get(i));
            }
            jl_camposCruzar.setModel(modelo);
            jl_campoSeleccionado.setModel(new DefaultListModel());
            AdministrarArbol adar = new AdministrarArbol(pathArchivoCruzar + "Arbol.eagle");
            if (adar.getArchivo().exists()) {
                adar.setArbol(arbolBCruzar);
                adar.cargarArchivo();
                arbolBCruzar = adar.getArbol();
            } else {
                archivoCruzar = null;
                JOptionPane.showMessageDialog(jd_cruzarArchivo, "Debe crear indice del archivo", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jb_seleccionarArchivoMouseClicked

    private void rb_boolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_boolMouseClicked
        // TODO add your handling code here:
        if (rb_bool.isSelected()) {
            js_longitud.setValue(1);
            js_longitud.setEnabled(false);
        }
    }//GEN-LAST:event_rb_boolMouseClicked

    private void rb_stringMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_stringMouseClicked
        // TODO add your handling code here:
        if (rb_string.isSelected()) {
            js_longitud.setValue(0);
            js_longitud.setEnabled(true);
        }
    }//GEN-LAST:event_rb_stringMouseClicked

    private void rb_charMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_charMouseClicked
        // TODO add your handling code here:
        if (rb_char.isSelected()) {
            js_longitud.setValue(1);
            js_longitud.setEnabled(false);
        }
    }//GEN-LAST:event_rb_charMouseClicked

    private void rb_doubleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_doubleMouseClicked
        // TODO add your handling code here:
        if (rb_double.isSelected()) {
            js_longitud.setValue(8);
            js_longitud.setEnabled(false);
        }
    }//GEN-LAST:event_rb_doubleMouseClicked

    private void rb_intMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_intMouseClicked
        // TODO add your handling code here:
        if (rb_int.isSelected()) {
            js_longitud.setValue(2);
            js_longitud.setEnabled(false);
        }
    }//GEN-LAST:event_rb_intMouseClicked

    private void jb_crearCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_crearCampoMouseClicked
        // TODO add your handling code here:
        if (jb_crearCampo.isEnabled()) {
            String nombreCampo = jt_nombreCampo.getText();
            String tipoCampo = "";
            if (rb_int.isSelected()) {
                tipoCampo = "int";
            }
            if (rb_double.isSelected()) {
                tipoCampo = "double";
            }
            if (rb_char.isSelected()) {
                tipoCampo = "char";
            }
            if (rb_string.isSelected()) {
                tipoCampo = "String";
            }
            if (rb_bool.isSelected()) {
                tipoCampo = "boolean";
            }
            int longitud = (int) js_longitud.getValue();
            boolean llave = false;
            if (rb_si.isSelected()) {
                llave = true;
            }

            if (metaData.getCampos().size() <= 14) {
                Campo nuevoCampo = new Campo(nombreCampo, tipoCampo, longitud, llave);
                metaData.getCampos().add(nuevoCampo);
                JOptionPane.showMessageDialog(jd_crearCampo, "El campo se ha creado exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
                if (nuevoCampo.isLlavePrimaria()) {
                    for (int i = metaData.getCampos().size() - 1; i >= 1; i--) {
                        Campo temp = nuevoCampo;
                        metaData.getCampos().set(i, metaData.getCampos().get(i - 1));
                        metaData.getCampos().set(i - 1, temp);
                    }
                }
                if (buscarLlave()) {
                    jTabbedPane1.setEnabledAt(2, true);
                    jTabbedPane1.setEnabledAt(3, true);
                    jTabbedPane1.setEnabledAt(4, true);
                }
            } else {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(jd_crearCampo, "Ya ha creado el máximo de campos que es 15", "Información", JOptionPane.INFORMATION_MESSAGE);
            }

            jt_nombreCampo.setText("");
            rb_int.setSelected(true);
            rb_bool.setSelected(false);
            rb_char.setSelected(false);
            rb_double.setSelected(false);
            rb_string.setSelected(false);
            js_longitud.setValue(2);
            if (buscarLlave()) {
                rb_si.setEnabled(false);
                rb_no.setSelected(true);
            } else {
                rb_si.setEnabled(true);
                rb_si.setSelected(true);
                rb_no.setSelected(false);
            }
            if (metaData.getCampos().size() == 1) {
                jb_listarCampoJD.setEnabled(true);
                jb_borrarCampoJD.setEnabled(true);
                jb_modificarCampoJD.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jb_crearCampoMouseClicked

    private void jb_reindJDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_reindJDMouseClicked
        // TODO add your handling code here:
        /*
        if (jb_reindexar.isEnabled() && arbolB.getRaiz() != null) {
            jl_camposRein.setModel(new DefaultListModel());
            DefaultListModel modelo = (DefaultListModel) jl_camposRein.getModel();
            for (int i = 0; i < metaData.getCampos().size(); i++) {
                modelo.addElement(metaData.getCampos().get(i));
            }
            jl_camposRein.setModel(modelo);

            jd_reindexar.pack();
            jd_reindexar.setModal(true);
            jd_reindexar.setLocationRelativeTo(this);
            jd_reindexar.setVisible(true);
        }*/
    }//GEN-LAST:event_jb_reindJDMouseClicked

    private void jb_cargarRegristrosPruebaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_cargarRegristrosPruebaMouseClicked
        // TODO add your handling code here:
        File registrosPrueba = new File("./Registros de Prueba.txt");
        if (registrosPrueba.exists()) {
            FileReader fr = null;
            BufferedReader br = null;
            try {
                fr = new FileReader(registrosPrueba);
                br = new BufferedReader(fr);
                String linea = "";
                while ((linea = br.readLine()) != null) {
                    String[] registro = linea.split("[|]");
                    int tamanoLlave = 0;
                    for (int i = 0; i < registro.length; i++) {
                        tamanoLlave += registro[i].length();
                    }
                    Llave llave = new Llave();
                    llave.setLlave(registro[0]);
                    llave.setTamano(tamanoLlave);
                    registros.add(linea);
                    llaves.add(llave);
                }
                guardarRegistros();
                jb_listarRegistros.setEnabled(true);
                jb_borrarRegistro.setEnabled(true);
                jb_ModificarRegistro.setEnabled(true);
                jb_buscarRegistro.setEnabled(true);
                jb_cruzarArchivos.setEnabled(true);
                JOptionPane.showMessageDialog(this, "Se ha cargado el archivo exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
            }
            try {
                br.close();
                fr.close();
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jb_cargarRegristrosPruebaMouseClicked

    private void jb_cruzarArchivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_cruzarArchivosMouseClicked
        // TODO add your handling code here:
        if (jb_cruzarArchivos.isEnabled()) {
            jd_cruzarArchivo.pack();
            jd_cruzarArchivo.setModal(true);
            jd_cruzarArchivo.setLocationRelativeTo(this);
            jd_cruzarArchivo.setVisible(true);
        }
    }//GEN-LAST:event_jb_cruzarArchivosMouseClicked

    private void jb_cruzarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_cruzarMouseClicked
        // TODO add your handling code here:
        if (archivoCruzar != null) {
            DefaultListModel modelo = (DefaultListModel) jl_campoSeleccionado.getModel();
            boolean flag = true;
            ArrayList<Campo> camposBuscar = new ArrayList<>();
            for (int i = 0; i < modelo.size(); i++) {
                flag = false;
                for (int j = 0; j < metaData.getCampos().size(); j++) {
                    if (((Campo) modelo.getElementAt(i)).getNombre().equals(metaData.getCampos().get(j).getNombre())) {
                        camposBuscar.add(metaData.getCampos().get(j));
                        flag = true;
                    }
                }
                if (!flag) {
                    i = modelo.size();
                }
            }
            if (flag) {
                ArrayList<Llave> llavesCruzar = new ArrayList<>();
                traverse(arbolB.getRaiz(), llavesCruzar);
                traverse(arbolBCruzar.getRaiz(), llavesCruzar);
                jTable_cruzar.setModel(new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{}
                ));
                DefaultTableModel modeloT = (DefaultTableModel) jTable_cruzar.getModel();
                String cabezas[] = new String[camposBuscar.size()];
                for (int i = 0; i < cabezas.length; i++) {
                    cabezas[i] = camposBuscar.get(i).getNombre();
                }
                for (Object a : cabezas) {
                    modeloT.addColumn(a);
                }
                jTable_cruzar.setModel(modeloT);

                DefaultTableModel modeloG = (DefaultTableModel) jTable_cruzar.getModel();
                String row[] = new String[camposBuscar.size()];
                RandomAccessFile archivo;
                ArrayList<Integer> tempInt = new ArrayList<>();
                traverseInt(arbolB.getRaiz(), tempInt);
                int hastaAqui = tempInt.size();
                for (int i = 0; i < llavesCruzar.size(); i++) {
                    if (i < hastaAqui) {
                        archivo = archivoActual;
                    } else {
                        archivo = archivoCruzar;
                    }
                    byte[] temp = new byte[300];
                    int pos = 0;
                    for (long j = llavesCruzar.get(i).getOffset(); j < (llavesCruzar.get(i).getOffset() + llavesCruzar.get(i).getTamano()); j++) {
                        try {
                            archivo.seek(j);
                            temp[pos] = archivo.readByte();
                            pos++;
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    String tempString = new String(temp);
                    String[] registro = tempString.split("[|]");
                    for (int j = 0; j < row.length; j++) {
                        row[j] = registro[j];
                    }
                    modeloG.addRow(row);
                    jTable_cruzar.setModel(modeloG);
                }
                jd_tablaCruzar.pack();
                jd_tablaCruzar.setModal(true);
                jd_tablaCruzar.setLocationRelativeTo(this);
                jd_tablaCruzar.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(jd_cruzarArchivo, "Uno de los campos seleccionados no esta en los dos archivos", "Información", JOptionPane.INFORMATION_MESSAGE);
                jl_campoSeleccionado.setModel(new DefaultListModel());
            }
        }
    }//GEN-LAST:event_jb_cruzarMouseClicked

    private void jb_cruzarListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_cruzarListaMouseClicked
        // TODO add your handling code here:
        if (jl_camposCruzar.getSelectedIndex() >= 0) {
            Campo campoTemp = metaDataCruzar.getCampos().get(jl_camposCruzar.getSelectedIndex());
            DefaultListModel modelo = (DefaultListModel) jl_campoSeleccionado.getModel();
            modelo.addElement(campoTemp);
            jl_campoSeleccionado.setModel(modelo);
        } else {
            JOptionPane.showMessageDialog(jd_cruzarArchivo, "Debe seleccionar un objeto en la lista de la izquierda", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jb_cruzarListaMouseClicked

    public boolean buscarLlave() {
        for (int i = 0; i < metaData.getCampos().size(); i++) {
            if (metaData.getCampos().get(i).isLlavePrimaria()) {
                return true;
            }
        }
        return false;
    }

    public void llenarArbol(NodoArbol nodo, int ubicCampo, BTree arbol) throws IOException {
        int i;
        System.out.println(arbolB.getRaiz().toString());
        for (i = 0; i < nodo.getKeyNumber(); i++) {
            if (!nodo.isLeaf()) {
                llenarArbol(nodo.getChildren()[i], ubicCampo, arbol);
            } else {
                byte[] registro = new byte[nodo.getKeys()[i].getTamano()];
                int pos = 0;
                for (int j = (int) nodo.getKeys()[i].getOffset(); j < (int) nodo.getKeys()[i].getOffset() + nodo.getKeys()[i].getTamano(); j++) {
                    archivoActual.seek(j);
                    registro[pos] = archivoActual.readByte();
                }
                String regristroString = new String(registro);
                String[] registrosArray = regristroString.split("[|]");
                Llave nuevaLlave = new Llave();
                nuevaLlave.setLlave(registrosArray[ubicCampo]);
                nuevaLlave.setOffset(nodo.getKeys()[i].getOffset());
                nuevaLlave.setTamano(nodo.getKeys()[i].getTamano());
                arbol.insert(nuevaLlave);
            }
        }
        if (!nodo.isLeaf()) {
            llenarArbol(nodo.getChildren()[i], ubicCampo, arbol);
        }
    }

    /*public void reindexar() throws IOException{
        int pos = 0;
        byte[] registrosByte = new byte[(int)archivoActual.length()-metaData.getTamanoMeta()];
        for (long i = metaData.getTamanoMeta(); i < archivoActual.length(); i++){
            archivoActual.seek(i);
            registrosByte[pos] = archivoActual.readByte();
            pos++;
        }
        String registrosString = new String(registrosByte);
        String registroString2 = "";
        for (int i = 0; i < registrosString.length();i++){
            if (registrosString.charAt(i) != '\n'){
                registroString2 += registrosString.charAt(i);
            }
        }
        String[] registrosArray = registroString2.split("[|]");
        System.out.println(Arrays.toString(registrosArray));
        for (long i = metaData.getTamanoMeta(); i < archivoActual.length(); i++){
            
        }
    }*/
    public Campo encontrarLlavePrimaria() {
        for (int i = 0; i < metaData.getCampos().size(); i++) {
            if (metaData.getCampos().get(i).isLlavePrimaria()) {
                return metaData.getCampos().get(i);
            }
        }
        return null;
    }

    public void guardarRegistros() throws IOException {
        String saltoLinea = "\n";
        posArchivo = archivoActual.length();
        boolean flag = false;
        for (int i = 0; i < registros.size(); i++) {
            try {
                if (!metaData.getAvailList().vacia()) {
                    int j;
                    Llave temp = new Llave();
                    for (j = 1; j <= metaData.getAvailList().size; j++) {
                        if (metaData.getAvailList().elementoPosicion(j).getTamano() >= registros.get(i).length()) {
                            flag = true;
                            break;
                        }
                    }
                    temp = metaData.getAvailList().elementoPosicion(j);
                    posArchivo = metaData.getAvailList().elementoPosicion(j).getOffset();
                    if (flag) {
                        if (j == 1 && j != metaData.getAvailList().size) {
                            archivoActual.seek(metaData.getPosAvailList());
                            Llave tempSiguiente = metaData.getAvailList().elementoPosicion(j + 1);
                            String nuevoPosAvail = tempSiguiente.getOffset() + "$" + tempSiguiente.getTamano();
                            archivoActual.write(nuevoPosAvail.getBytes());
                        }
                        if (j == 1 && j == metaData.getAvailList().size) {
                            archivoActual.seek(metaData.getPosAvailList());
                            String espacios = "      ";
                            archivoActual.write(espacios.getBytes());
                        } else {
                            if (j == metaData.getAvailList().size) {
                                Llave tempAnterior = metaData.getAvailList().elementoPosicion(j - 1);
                                archivoActual.seek(tempAnterior.getOffset());
                                String nuevoPosAvail = "*-1$" + tempAnterior.getTamano() + "*";
                                archivoActual.write(nuevoPosAvail.getBytes());
                            }
                        }
                        if (j > 1 && j < metaData.getAvailList().size) {
                            Llave tempAnterior = metaData.getAvailList().elementoPosicion(j - 1);
                            Llave tempSiguiente = metaData.getAvailList().elementoPosicion(j + 1);
                            archivoActual.seek(tempAnterior.getOffset());
                            String nuevoPosAvail = "*" + tempSiguiente.getOffset() + "$" + tempAnterior.getTamano() + "*";
                            archivoActual.write(nuevoPosAvail.getBytes());
                        }
                    }
                    metaData.getAvailList().borrarElemento(j);
                }
                llaves.get(i).setOffset(posArchivo);
                arbolB.insert(llaves.get(i));
                archivoActual.seek(posArchivo);
                long posTemp = posArchivo;
                archivoActual.write(registros.get(i).getBytes());
                posArchivo += registros.get(i).length();
                int acum = 0;
                for (long j = posTemp; j >= 0; j--) {
                    archivoActual.seek(j);
                    byte[] temp = {archivoActual.readByte()};
                    String tempString = new String(temp);
                    if (tempString.equals("\n")) {
                        j = -1;
                    } else {
                        acum++;
                    }
                }
                if (acum >= 50) {
                    archivoActual.seek(posArchivo);
                    archivoActual.write(saltoLinea.getBytes());
                    posArchivo++;
                }
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        registros.clear();
        llaves.clear();
    }

    public Llave buscarKey(String llave, NodoArbol nodo) {
        for (int i = 0; i < nodo.getKeys().length; i++) {
            if (nodo.getKeys()[i].getLlave().equals(llave)) {
                return nodo.getKeys()[i];
            }
        }
        return null;
    }

    public void llenarTabla(JTable tabla, Llave llave) throws IOException {
        tabla.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{}
        ));
        DefaultTableModel modeloT = (DefaultTableModel) tabla.getModel();
        String cabezas[] = new String[metaData.getCampos().size()];
        for (int i = 0; i < cabezas.length; i++) {
            cabezas[i] = metaData.getCampos().get(i).getNombre();
        }
        for (Object a : cabezas) {
            modeloT.addColumn(a);
        }
        tabla.setModel(modeloT);

        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        String row[] = new String[metaData.getCampos().size()];
        byte[] temp = new byte[300];
        int pos = 0;
        for (long i = llave.getOffset(); i < (llave.getOffset() + llave.getTamano()); i++) {
            archivoActual.seek(i);
            temp[pos] = archivoActual.readByte();
            pos++;
        }
        String tempString = new String(temp);
        String[] registro = tempString.split("[|]");
        for (int i = 0; i < row.length; i++) {
            row[i] = registro[i];
        }
        modelo.addRow(row);
        tabla.setModel(modelo);
    }

    public void traverse(NodoArbol nodo, ArrayList<Llave> llaves) {
        int i;
        for (i = 0; i < nodo.getKeyNumber(); i++) {
            if (!nodo.isLeaf()) {
                traverse(nodo.getChildren()[i], llaves);
            }
            if (llaves.size() <= 10) {
                llaves.add(nodo.getKeys()[i]);
            } else {
                break;
            }
        }
        if (!nodo.isLeaf()) {
            traverse(nodo.getChildren()[i], llaves);
        }
    }

    public void traverseInt(NodoArbol nodo, ArrayList<Integer> cantLlaves) {
        int i;
        for (i = 0; i < nodo.getKeyNumber(); i++) {
            if (!nodo.isLeaf()) {
                traverseInt(nodo.getChildren()[i], cantLlaves);
            }
            cantLlaves.add(1);
        }
        if (!nodo.isLeaf()) {
            traverseInt(nodo.getChildren()[i], cantLlaves);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    RandomAccessFile archivoActual;
    RandomAccessFile archivoCruzar;
    Metadata metaDataCruzar;
    BTree arbolBCruzar = new BTree(6);
    String path;
    Metadata metaData;
    BTree arbolB = new BTree(6);
    ArrayList<String> registros;
    ArrayList<Llave> llaves;
    long posArchivo;
    Llave llaveActual = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup_llave;
    private javax.swing.ButtonGroup buttonGroup_llaveMod;
    private javax.swing.ButtonGroup buttonGroup_tipo;
    private javax.swing.ButtonGroup buttonGroup_tipoMod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable_agregarRegistro;
    private javax.swing.JTable jTable_borrarRegistro;
    private javax.swing.JTable jTable_buscarRegistro;
    private javax.swing.JTable jTable_cruzar;
    private javax.swing.JTable jTable_listarRegistro;
    private javax.swing.JTable jTable_modificarRegistro;
    private javax.swing.JButton jb_ModificarRegistro;
    private javax.swing.JButton jb_abrir;
    private javax.swing.JButton jb_addNewRow;
    private javax.swing.JButton jb_borrarCampoJD;
    private javax.swing.JButton jb_borrarRegistro;
    private javax.swing.JButton jb_buscarLLaveBoR;
    private javax.swing.JButton jb_buscarLlaveBR;
    private javax.swing.JButton jb_buscarLlaveModificar;
    private javax.swing.JButton jb_buscarRegistro;
    private javax.swing.JButton jb_cargarRegristrosPrueba;
    private javax.swing.JButton jb_cerrar;
    private javax.swing.JButton jb_crearCampo;
    private javax.swing.JButton jb_crearCampoJD;
    private javax.swing.JButton jb_crearIndice;
    private javax.swing.JButton jb_crearRegistro;
    private javax.swing.JButton jb_cruzar;
    private javax.swing.JButton jb_cruzarArchivos;
    private javax.swing.JButton jb_cruzarLista;
    private javax.swing.JButton jb_deleteField;
    private javax.swing.JButton jb_deleteLastRow;
    private javax.swing.JToggleButton jb_deleteRegistro;
    private javax.swing.JButton jb_exportarExcel;
    private javax.swing.JButton jb_exportarXML;
    private javax.swing.JButton jb_guardarRegistros;
    private javax.swing.JButton jb_listarCampoJD;
    private javax.swing.JButton jb_listarRegistros;
    private javax.swing.JButton jb_modificarCampoJD;
    private javax.swing.JButton jb_modificarRegistro;
    private javax.swing.JButton jb_modify;
    private javax.swing.JButton jb_nuevo;
    private javax.swing.JButton jb_reindJD;
    private javax.swing.JButton jb_reindexar;
    private javax.swing.JButton jb_salir;
    private javax.swing.JButton jb_salvar;
    private javax.swing.JButton jb_seleccionarArchivo;
    private javax.swing.JDialog jd_borrarCampo;
    private javax.swing.JDialog jd_borrarRegistro;
    private javax.swing.JDialog jd_buscarRegistros;
    private javax.swing.JDialog jd_crearCampo;
    private javax.swing.JDialog jd_crearRegistros;
    private javax.swing.JDialog jd_cruzarArchivo;
    private javax.swing.JDialog jd_listarCampo;
    private javax.swing.JDialog jd_listarRegistros;
    private javax.swing.JDialog jd_modificarCampo;
    private javax.swing.JDialog jd_modificarRegistro;
    private javax.swing.JDialog jd_reindexar;
    private javax.swing.JDialog jd_tablaCruzar;
    private javax.swing.JList<String> jl_campoSeleccionado;
    private javax.swing.JList<String> jl_camposCruzar;
    private javax.swing.JList<String> jl_camposDlt;
    private javax.swing.JList<String> jl_camposMod;
    private javax.swing.JList<String> jl_camposRein;
    private javax.swing.JLabel jl_llaveP_BorrarRegistro;
    private javax.swing.JLabel jl_llaveP_BuscarRegistro;
    private javax.swing.JLabel jl_llaveP_ModificarRegistro;
    private javax.swing.JPanel jp_archivo;
    private javax.swing.JPanel jp_campo;
    private javax.swing.JPanel jp_estand;
    private javax.swing.JPanel jp_indice;
    private javax.swing.JPanel jp_registro;
    private javax.swing.JSpinner js_longitud;
    private javax.swing.JSpinner js_longitudMod;
    private javax.swing.JTextField jt_LlavePrimariaBorrarRegistro;
    private javax.swing.JTextField jt_llavePrimariaBuscarRegistros;
    private javax.swing.JTextField jt_llavePrimariaModificar;
    private javax.swing.JTextField jt_nombreCampo;
    private javax.swing.JTextField jt_nombreCampoMod;
    private javax.swing.JTable jtable_campos;
    private javax.swing.JRadioButton rb_bool;
    private javax.swing.JRadioButton rb_boolMod;
    private javax.swing.JRadioButton rb_char;
    private javax.swing.JRadioButton rb_charMod;
    private javax.swing.JRadioButton rb_double;
    private javax.swing.JRadioButton rb_doubleMod;
    private javax.swing.JRadioButton rb_int;
    private javax.swing.JRadioButton rb_intMod;
    private javax.swing.JRadioButton rb_no;
    private javax.swing.JRadioButton rb_si;
    private javax.swing.JRadioButton rb_string;
    private javax.swing.JRadioButton rb_stringMod;
    // End of variables declaration//GEN-END:variables
}
